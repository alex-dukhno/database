name: Pull Requests

on:
  pull_request:
    branches: [ main ]

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash

jobs:
  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: EmbarkStudios/cargo-deny-action@v1

  rustfmt:
    needs: cargo-deny
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: set up rust toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
          rust-version: nightly
      - name: checkout code
        uses: actions/checkout@v2
      - name: check code formatting
        run: cargo fmt --all -- --check

  clippy:
    needs:
      - cargo-deny
      - rustfmt
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: set up rust toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
          rust-version: stable
      - name: checkout code
        uses: actions/checkout@v2
      - name: install LLVM and Clang build dependencies for pg-sql-parser
        run: sudo apt install -y llvm
      - name: check code style
        run: cargo clippy --all-targets --all-features --all -- -D warnings

  tests:
    needs:
      - cargo-deny
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: install LLVM and Clang build dependencies for pg-sql-parser
        run: sudo apt install -y llvm
      - name: run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.17.0'
          args: '--ignore-tests -- --test-threads 1'
      - name: upload to coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  compatibility-test:
    needs:
      - cargo-deny
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.0
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
    steps:
      - name: set-up-rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - name: set-up-java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: checkout code
        uses: actions/checkout@v2
      - name: install LLVM and Clang build dependencies for pg-sql-parser
        run: sudo apt install -y llvm
      - name: start-database
        run: cargo run & cargo build && sleep 1
      - name: run-tests
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: :compatibility:clean :compatibility:test -Dci=true

  ssl-mode-test:
    needs:
      - cargo-deny
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    env:
      PFX_CERTIFICATE_FILE: 'tests/fixtures/identity.pfx'
      PFX_CERTIFICATE_PASSWORD: 'password'
    steps:
      - name: set-up-rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - name: set-up-java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: checkout code
        uses: actions/checkout@v2
      - name: install LLVM and Clang build dependencies for pg-sql-parser
        run: sudo apt install -y llvm
      - name: start-database
        run: cargo run & cargo build && sleep 1
      - name: run-tests
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: :ssl_mode:clean :ssl_mode:test -Dci=true

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs:
      - tests
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        run: exit 0

  ci-failure:
    name: ci
    if: github.event_name == 'push' && !success()
    needs:
      - tests
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a failure
        run: exit 1
