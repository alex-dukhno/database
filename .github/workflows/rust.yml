name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash

jobs:
  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: EmbarkStudios/cargo-deny-action@v1

  rustfmt:
    needs: cargo-deny
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: set-up-rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
          rust-version: nightly
      - uses: actions/checkout@v2
      - run: ./ci/rustfmt.sh

  clippy:
    needs:
      - cargo-deny
      - rustfmt
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: set-up-rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
          rust-version: stable
      - uses: actions/checkout@v2
      - run: ./ci/clippy.sh

  tests:
    needs:
      - cargo-deny
      - rustfmt
      - clippy
    strategy:
      matrix:
        os:
          - ubuntu
          - windows
          - macos
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install tarpaulin
        if: matrix.os == 'ubuntu'
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: 0.14.0
          use-tool-cache: true
      - name: unit-tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib --all
      - name: code-coverage
        if: matrix.os == 'ubuntu'
        run: cargo tarpaulin --exclude-files proof-of-concepts/ -o Lcov --output-dir ./coverage
      - name: coveralls
        if: matrix.os == 'ubuntu'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build-&-push-docker-image
        uses: mr-smithers-excellent/docker-build-push@v3
        with:
          image: alex-dukhno/database
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  functional-tests:
    needs:
      - publish-docker
    runs-on: ubuntu-latest
    container:
      image: alexdukhno/database:latest
      ports:
        - 5432
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: set-up-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: install-dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/functional/requirements.txt
      - name: run-tests
        run: |
          pytest -v tests/functional/*

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs:
      - tests
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        run: exit 0

  ci-failure:
    name: ci
    if: github.event_name == 'push' && !success()
    needs:
      - tests
      - rustfmt
      - clippy
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a failure
        run: exit 1
